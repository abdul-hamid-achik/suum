version: '3'

tasks:
  clean:
    desc: Restarts development environment
    deps: [compose.up]
    cmds:
      - mix clean
      - mix ecto.drop
      - rm -rf ./assets/node_modules ./_build ./deps
      - rm .env
      - task: compose.down

  compose.logs:
    desc: Shows logs from the containers
    cmds:
      - docker-compose logs --tail=5 -f {{.CONTAINER_NAME}}

  compose.exec:
    cmds:
      - docker-compose exec {{.CONTAINER_NAME}} {{.COMMAND}}

  compose.ps:
    cmds:
      - docker-compose ps

  compose.up:
    desc: Starts docker images
    cmds:
      - docker-compose up -d

  compose.down:
    desc: Stops docker images
    cmds:
      - docker-compose down -v

  compose.build:
    desc: Builds containers
    cmds:
      - docker-compose build --force-rm
  
  compose.restart:
    cmds:
    - docker-compose restart
  
  deps.get:
    cmds:
    - mix deps.get

  deps.compile:
    cmds:
      - mix deps.compile

  compile:
    cmds:
      - mix compile

  reset.hard:
    desc: Restarts development environment
    cmds:
      - task: clean
      - task: setup

  reset:
    cmds:
      - task: compose.down
      - task: compose.up
      - task: wait
      - task: db.reset

  routes: mix phx.routes

  iex:
    desc: Starts interactive elixir session
    deps: [db.migrate]
    cmds:
      - iex -S mix

  iex.server:
    deps: [deps.get]
    cmds:
      - iex -S mix phx.server

  server:
    deps: [deps.get]
    cmds:
      - mix phx.server

  server.dry.soft:
    deps: [compose.restart]
    cmds:
      - task: server

  server.dry.hard:
    cmds:
      - task: reset.hard
      - task: wait
      - task: server

  setup:    
    desc: |
      Setups the project by installing node_modules, elixir deps, running the database and
      seeding some test data
    deps: [compose.up]
    cmds:
      - cp .env.template .env
      - task: deps.get
      - task: compile
      - task: db.setup
      - npm install --prefix assets
    status:
      - test -d ./assets/node_modules
      - test -d ./_build
      - test -d ./deps
      - test -f .env

  db.setup:
    deps: [compose.up]
    cmds:
      - mix ecto.setup

  db.reset:
    deps: [compose.up]
    cmds:
      - mix ecto.reset

  db.migrate:
    deps: [compose.up]
    cmds:
      - mix ecto.migrate
  
  format:
    desc: Formats elixir code
    cmds:
      - mix format

  format.check:
    desc: Runs formatting checking for elixir
    cmds:
      - mix format --check-formatted

  dialyzer.check:
    desc: Runs Dialyzer for elixir
    cmds:
      - mkdir -p priv/plts
      - mix dialyzer --quiet

  seed:
    desc: Seeds database with testing data
    cmds:
    - mix run priv/repo/seeds.exs

  test:
    desc: Run tests
    deps: [compose.up]
    cmds:
      - mix test

  test.wip:
    desc: Run work in progress tagged tests
    deps: [compose.up]
    cmds:
      - mix test --only wip

  wait:
    cmds:
      - sleep 3